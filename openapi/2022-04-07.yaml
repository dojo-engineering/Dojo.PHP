openapi: 3.0.0
info:
  title: Unified Payments API
  version: '2023-12-15'
  description: |-
    # Introduction

    The Dojo Universal Payments API (UPAPI) is RESTful. It returns HTTP response codes to indicate errors. It also
    accepts and returns JSON in the HTTP body.

    ## Base URLs

    Use the following base URL when making requests to the API: [https://staging-api.dojo.dev/master](https://staging-api.dojo.dev/master)

    ## Authentication

    The API uses [Basic HTTP auth](https://en.wikipedia.org/wiki/Basic_access_authentication). You can generate API keys in [Developer Portal](https://developer.dojo.tech).
    Secret keys for the test environment have the prefix `sk_sandbox_` and for production have the prefix `sk_prod_`.

    You must include your secret API key in the header of all requests, for example:

    ```curl
    curl
      --header 'content-type: application/json' \
      --header 'Authorization: Basic sk_prod_your_key' \
    ...
    ```

    API requests without authentication will fail.

    ## Additional Required Headers

    The following headers are required on all API requests, requests without them will fail.

    `reseller-id` - Identifies the reseller who sells software on behalf of the EPOS company. This value will be unique and provided by Dojo to each reseller.


    `software-house-id` - Identifies the EPOS company whose software is generating the request. This value shouldn't be configurable as it will remain the same for all customers using particular EPOS software. This value will be provided by Dojo.

    ## HTTP Responses

    The API returns standard HTTP response codes [RFC 7231](https://tools.ietf.org/html/rfc7231#section-6) on each request to indicate the success or otherwise of API requests. HTTP status codes summary are listed below:

    * `200 OK` — The request was successful.

    * `201 Created` — The request was successful, and a new resource was created as a result.

    * `204 No Content` — The request was successful, but there is no content to send.

    * `400 Bad Request` — Bad request, probably due to a syntax error.

    * `401 Unauthorized` — Authentication required.

    * `403 Forbidden` — The API key doesn't have permissions.

    * `404 Not Found` — The resource doesn't exist.

    * `405 Method Not Allowed` — The request method is known by the server but isn't supported by the target resource.

    * `409 Conflict`—The request couldn't be completed because it conflicted with another request or the server's configuration.

    * `500`, `502`, `503`, `504` `Server Errors` — An unexpected error occurred with our API, please reach out to support.

    ## Errors 

    The API follows the error response format proposed in [RFC 7807](https://tools.ietf.org/html/rfc7807) also known as Problem Details for HTTP APIs. All errors are returned in the form of JSON.

    ### Error Schema

    In case of an error, the response object contains the following fields:
    The error object contains the following fields:
    * `type` [string] — A URI reference RFC 3986 that identifies the problem type.

    * `code` [ErrorCode] — A short, machine-readable description of the error.

    * `title` [string] — A short, human-readable summary of the error.

    * `detail` [string] — A human-readable message giving more details about the error. Not always present.

    * `status` [integer] — The HTTP status code.

    * `traceId` [string] — The unique identifier of the failing request.

    The following example shows a possible error response:

    ```json
    {
        "type": "https://tools.ietf.org/html/rfc7231#section-6.5.1",
        "code": "INVALID_REQUEST",
        "title": "One or more validation errors occurred.",
        "detail": "amount missing",
        "status": 400,
        "traceId": "00-a405f077df056a498323ffbcec05923f-aa63e6f4dbbc734a-01",
    }
    ```

    ## Versioning

    Dojo API uses the yyyy-mm-dd API version-naming scheme. You have to pass the version as the `version` header in all API calls, for example:

    ``` curl
    curl
      --header 'content-type: application/json' \
      --header 'Authorization: Basic sk_prod_your_key' \
      --header 'version: Pre-release' \
    ```

    When [breaking changes](../payments/development-resources/versioning-overview#breaking-changes) are made to the API, the current version listed below will be updated. 

    The current version is `Pre-release`.
  termsOfService: https://dojo.tech/legal/
  contact:
    name: Dojo Developer Experience Team
servers:
  - url: https://staging-api.dojo.dev/master
security:
  - ApiKeyAuth: []
tags:
  - name: Payment intents
    description: |-
      Allows you to take and manage payments.

      **Documentation**: [Payment intents](../../payments/manage-payments/payment-intent)
  - name: Refunds
    description: |-
      Allows you to create a reversal for payments.


        **Documentation**: [Reversal](../payments/manage-payments/cancellation-payments/reversal/)
  - name: Reversal
    description: |-
      Allows you to create a reversal for payments.

      **Documentation**: [Reversal](../../payments/manage-payments/cancellation-payments/reversal/)
  - name: Captures
    description: |-
      Allows you to capture the full payment amount or part of the amount.

      **Documentation**: [Captures](../../payments/manage-payments/capture/)
  - name: Webhooks
    description: |-
      Webhooks notify you when a specific event has occurred.

      **Documentation**: [Webhooks](../payments/development-resources/webhooks/)
  - name: Customers
    description: Allows to create and manage a customer of your business.
  - name: Setup intents
    description: |-
      Allows you to setup a card for future payments.

      **Documentation**: [Setup intent](../payments/manage-payments/setup-intent/)
  - name: Terminals
    description: Allows you to manage processing payments and sessions on the terminal.
paths:
  /payment-intents:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentIntentRequest'
        required: true
        x-name: createPaymentIntentRequest
        x-position: 1
      tags:
        - Payment intents
      parameters:
        - example: Pre-release
          name: version
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
          schema:
            format: date
            type: string
          in: header
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntent'
              example:
                id: pi_sandbox_RBMHTJ4fIkmSppDILZVCGw
                captureMode: Auto
                status: Created
                amount:
                  value: 1000
                  currencyCode: GBP
                totalAmount:
                  value: 1000
                  currencyCode: GBP
                reference: Order 234
                description: Demo payment intent
                terminalId: '1'
                itemLines: []
                taxLines: []
                metadata: {}
                refund: false
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      operationId: PaymentIntents_CreatePaymentIntent
      summary: Create a payment intent
      description: Creates a payment intent.
  /payment-intents/{paymentIntentId}:
    get:
      tags:
        - Payment intents
      parameters:
        - example: pi_sandbox_RBMHTJ4fIkmSppDILZVCGw
          name: paymentIntentId
          description: |
            The unique identifier for the payment intent.
          schema:
            type: string
          in: path
          required: true
          x-position: 1
        - example: Pre-release
          name: version
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
          schema:
            format: date
            type: string
          in: header
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntent'
              example:
                id: pi_sandbox_RBMHTJ4fIkmSppDILZVCGw
                captureMode: Auto
                status: Created
                amount:
                  value: 1000
                  currencyCode": GBP
                totalAmount:
                  value: 1000
                  currencyCode: GBP
                notifications:
                  - message: Transaction started on terminal
                    status: Created
                    createdAt: '2022-02-21T14:39:21.6050276Z'
                  - message: Terminal requested user to enter pin
                    status: Created
                    createdAt: '2022-02-21T14:39:25.6050276Z'
                  - message: Terminal processing
                    status: Created
                    createdAt: '2022-02-21T14:39:25.6050276Z'
                createdAt: '2022-02-21T14:39:21.6050276Z'
                updatedAt: '2022-02-21T14:39:21.6050277Z'
                reference: Order 234
                description: Demo payment intent
                terminalId: '1'
                itemLines: []
                taxLines: []
                metadata: {}
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      operationId: PaymentIntents_Get
      summary: Retrieve a payment intent
      description: Retrieves the details of a payment intent.
    delete:
      tags:
        - Payment intents
      parameters:
        - example: Pre-release
          name: version
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
          schema:
            format: date
            type: string
          in: header
          required: true
        - example: pi_sandbox_RBMHTJ4fIkmSppDILZVCGw
          name: paymentIntentId
          description: |
            The unique identifier for the payment intent.
          schema:
            type: string
          in: path
          required: true
          x-position: 1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntent'
              example:
                id: pi_sandbox_RBMHTJ4fIkmSppDILZVCGw
                captureMode": Auto
                status: Canceled
                amount:
                  value: 1000
                  currencyCode": GBP
                totalAmount:
                  value: 1000
                  currencyCode: GBP
                createdAt: '2022-02-21T14:39:21.6050276Z'
                updatedAt: '2022-02-21T14:39:21.6050277Z'
                reference: Order 234
                description: Demo payment intent
                terminalId: '1'
                itemLines: []
                taxLines: []
                metadata: {}
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      operationId: PaymentIntents_Delete
      summary: Cancel a payment intent
      description: Cancels a payment intent. If a payment intent's status is `Created`, it can be canceled. After cancellation, the payment intent status will change to `Canceled` and any operations will fail with an error.
  /payment-intents/{paymentIntentId}/captures:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCaptureRequest'
        required: true
        x-name: request
        x-position: 2
      tags:
        - Captures
      parameters:
        - example: Pre-release
          name: version
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
          schema:
            format: date
            type: string
          in: header
          required: true
        - example: pi_sandbox_RBMHTJ4fIkmSppDILZVCGw
          name: paymentIntentId
          description: |
            The unique identifier for the payment intent.
          schema:
            type: string
          in: path
          required: true
          x-position: 1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capture'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
      operationId: Captures_Create
      summary: Captures a payment
      description: Captures a payment intent that has previously been created but not yet refunded or reversed. You can capture the full amount or a partial amount.
  /payment-intents/{paymentIntentId}/charge:
    post:
      tags:
        - Payment intents
      summary: Charge a card
      operationId: PaymentIntents_ChargePaymentIntent
      description: Allows you to charge a card later. This is available for merchant-initiated transactions only.
      parameters:
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
        - name: paymentIntentId
          in: path
          required: true
          schema:
            type: string
            nullable: true
          description: |
            The unique identifier for the payment intent.
          x-position: 3
          example: pi_sandbox_RBMHTJ4fIkmSppDILZVCGw
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargeResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /payment-intents/{paymentIntentId}/refresh-client-session-secret:
    post:
      tags:
        - Payment intents
      operationId: PaymentIntents_RefreshClientSessionSecret
      parameters:
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
        - name: paymentIntentId
          in: path
          required: true
          schema:
            type: string
          description: |
            The unique identifier for the payment intent.
          x-position: 1
          example: pi_sandbox_RBMHTJ4fIkmSppDILZVCGw
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntent'
              example:
                id: pi_sandbox_RBMHTJ4fIkmSppDILZVCGw
                captureMode": Auto
                clientSessionSecret: lmoFsbTJxoiOBgeWkEoFS05ADIQ6STJfJE3oGVNO2cFSb9kza06wGan2DVNceOYCsmZ5I1SiEioFausOAkecUPz8BKSmMV96ecXZZ4-NzoiYZJF0uVYeW8xosG6blQKtZ6HqIIF8--2a7DC_iQ==
                clientSessionSecretExpirationDate: '2022-02-21T15:09:21Z'
                status: Created
                paymentMethods:
                  - Card
                amount:
                  value: 1000
                  currencyCode": GBP
                totalAmount:
                  value: 1000
                  currencyCode: GBP
                createdAt: '2022-02-21T14:39:21.6050276Z'
                updatedAt: '2022-02-21T14:39:21.6050277Z'
                reference: Order 234
                description: Demo payment intent
                itemLines: []
                taxLines: []
                metadata: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      summary: Update a client session secret
      description: Updates a client session secret.
  /payment-intents/search:
    post:
      tags:
        - Payment intents
      operationId: PaymentIntents_Search
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchPaymentIntentRequest'
        required: true
        x-position: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedPaymentIntent'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      parameters:
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
      summary: List all payment intents
      description: |-
        Retrieves a list of payment intents.
        Results are paginated. By default, the method returns up to 50 payment intents.
  /payment-intents/{paymentIntentId}/tips-amount:
    post:
      tags:
        - Payment intents
      operationId: PaymentIntents_SetTipsAmount
      parameters:
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
        - name: paymentIntentId
          in: path
          required: true
          description: |
            The unique identifier for the payment intent.
          schema:
            type: string
          x-position: 1
          example: pi_sandbox_RBMHTJ4fIkmSppDILZVCGw
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetTipsAmountRequest'
        required: true
        x-position: 2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntent'
              example:
                id: pi_sandbox_RBMHTJ4fIkmSppDILZVCGw
                captureMode": Auto
                clientSessionSecret: lmoFsbTJxoiOBgeWkEoFS05ADIQ6STJfJE3oGVNO2cFSb9kza06wGan2DVNceOYCsmZ5I1SiEioFausOAkecUPz8BKSmMV96ecXZZ4-NzoiYZJF0uVYeW8xosG6blQKtZ6HqIIF8--2a7DC_iQ==
                clientSessionSecretExpirationDate: '2022-02-21T15:09:21Z'
                status: Created
                paymentMethods:
                  - Card
                amount:
                  value: 1000
                  currencyCode": GBP
                totalAmount:
                  value: 1000
                  currencyCode: GBP
                createdAt: '2022-02-21T14:39:21.6050276Z'
                updatedAt: '2022-02-21T14:39:21.6050277Z'
                reference: Order 234
                description: Demo payment intent
                itemLines: []
                taxLines: []
                metadata: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '405':
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      summary: Change tips amount
      description: Changes tips amount for a payment intent. Available if you allowed tips when creating this payment intent.
  /payment-intents/{paymentIntentId}/amount:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAmountRequest'
        required: true
        x-name: request
        x-position: 2
      tags:
        - Payment intents
      parameters:
        - example: Pre-release
          name: version
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
          schema:
            format: date
            type: string
          in: header
          required: true
        - example: pi_sandbox_RBMHTJ4fIkmSppDILZVCGw
          name: paymentIntentId
          description: |
            The unique identifier for the payment intent.
          schema:
            type: string
          in: path
          required: true
          x-position: 1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntent'
              example:
                id: pi_sandbox_RBMHTJ4fIkmSppDILZVCGw
                captureMode": Auto
                status: Created
                amount:
                  value: 1000
                  currencyCode": GBP
                totalAmount:
                  value: 1000
                  currencyCode: GBP
                createdAt: '2022-02-21T14:39:21.6050276Z'
                updatedAt: '2022-02-21T14:39:21.6050277Z'
                reference: Order 234
                description: Demo payment intent
                terminalId: '1'
                itemLines: []
                taxLines: []
                metadata: {}
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Method not allowed
      operationId: PaymentIntents_SetCustomAmount
      summary: Change a payment intent amount
      description: Changes the payment intent's amount. Available if you allow amount changes when creating the intent.
  /payment-intents/{paymentIntentId}/receipt:
    post:
      tags:
        - Payment intents
      summary: Send a receipt
      description: Sends a receipt to the email addresses you specified.
      operationId: Receipt_Create
      parameters:
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
        - name: paymentIntentId
          in: path
          required: true
          description: |
            The unique identifier for the payment intent.
          schema:
            type: string
          x-position: 1
          example: pi_sandbox_RBMHTJ4fIkmSppDILZVCGw
      responses:
        '204':
          description: Payment receipt requested successfully.
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReceiptRequest'
        description: The email receipt request body.
    parameters:
      - schema:
          type: string
        name: paymentIntentId
        in: path
        required: true
  /payment-intents/{paymentIntentId}/refunds:
    post:
      tags:
        - Refunds
      summary: Create a refund
      description: Creates a refund. Refund allows you to return a payment that has previously been created but not yet refunded. You can refund the full amount or a partial amount.
      operationId: Refunds_Create
      parameters:
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
        - name: paymentIntentId
          in: path
          required: true
          description: |
            The unique identifier for the payment intent.
          schema:
            type: string
          x-position: 1
        - name: idempotencyKey
          x-originalName: idempotencyKey
          in: header
          required: true
          description: An idempotency key to recognize subsequent retries of the same request. How you generate the idempotency key is up to you. The key must be unique for each new refund processed on the payment intent.
          schema:
            type: string
            maxLength: 100
          x-position: 2
      requestBody:
        x-name: createRefundRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRefundRequest'
        required: true
        x-position: 3
        description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /payment-intents/refunds/{refundId}:
    get:
      tags:
        - Refunds
      operationId: PaymentIntents_GetRefundById
      parameters:
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
        - name: refundId
          in: path
          required: true
          description: The unique identifier for the refund.
          schema:
            type: string
            maxLength: 50
          x-position: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      description: Retrieves the details of a refund that has previously been created.
      summary: Retrieve a refund
  /payment-intents/{paymentIntentId}/reversal:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReversalRequest'
        required: true
      tags:
        - Reversal
      parameters:
        - example: Pre-release
          name: version
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
          schema:
            format: date
            type: string
          in: header
          required: true
        - name: paymentIntentId
          description: |
            The unique identifier for the payment intent.
          schema:
            type: string
          in: path
          required: true
          x-position: 1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reversal'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
      operationId: Reversal_Create
      summary: Create a reversal
      description: Reverses a payment intent.
  /setup-intents:
    post:
      tags:
        - Setup intents
      operationId: SetupIntents_Create
      summary: Create a setup intent
      parameters:
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
            nullable: false
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
          x-position: 3
      description: Creates a setup intent.
      requestBody:
        x-name: createSetupIntentRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSetupIntentRequest'
        required: true
        x-position: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetupIntentResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /setup-intents/{setupIntentId}:
    get:
      tags:
        - Setup intents
      operationId: SetupIntents_GetById
      summary: Retrieve a setup intent
      parameters:
        - name: setupIntentId
          in: path
          required: true
          schema:
            type: string
            nullable: true
          description: The unique identifier for the setup intent.
          x-position: 3
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
            nullable: false
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
          x-position: 4
      description: Get a setup intent by ID.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetupIntentResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Setup intents
      summary: Cancel a setup intent
      operationId: SetupIntents_Delete
      parameters:
        - name: setupIntentId
          in: path
          required: true
          schema:
            type: string
            maxLength: 50
            nullable: true
          description: The unique identifier for the setup intent.
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
            nullable: false
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
      description: Cancels a setup intent.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetupIntentResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Internal server error
  /setup-intents/public/{setupIntentId}:
    get:
      tags:
        - Setup intents
      operationId: SetupIntents_GetPublicById
      summary: Retrieve a setup intent (no auth)
      parameters:
        - name: setupIntentId
          in: path
          required: true
          schema:
            type: string
            nullable: true
          description: The unique ID of the setup intent.
          x-position: 1
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
            nullable: false
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
          x-position: 2
      description: Get a setup intent by ID.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetupIntentPublicResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /setup-intents/{setupIntentId}/refresh-client-session-secret:
    post:
      tags:
        - Setup intents
      operationId: SetupIntents_RefreshPaymentIntentToken
      summary: Update a client session secret
      parameters:
        - name: setupIntentId
          in: path
          required: true
          schema:
            type: string
            nullable: true
          description: The unique ID of the setup intent.
          x-position: 1
        - name: version
          in: header
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
          required: true
          schema:
            type: string
            format: date
            nullable: false
          x-position: 2
      description: Updates a client session secret.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetupIntentResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /setup-intents/public/{setupIntentId}/refresh-client-session-secret:
    post:
      tags:
        - Setup intents
      operationId: SetupIntents_RefreshSetupIntentTokenPublic
      summary: Update a client session secret (no auth)
      parameters:
        - name: setupIntentId
          in: path
          required: true
          schema:
            type: string
            nullable: true
          description: The unique ID of the setup intent.
          x-position: 1
        - name: version
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
          in: header
          required: true
          schema:
            type: string
            format: date
            nullable: false
          x-position: 2
      description: Updates a client session secret.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetupIntentPublicResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /webhooks/events:
    get:
      tags:
        - Webhooks
      operationId: Webhooks_GetAllWebhooks
      summary: List all events
      description: Retrieves a list of all events.
      parameters:
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookViewModel'
              example:
                - model: PaymentIntent
                  events:
                    - payment_intent.created
                    - payment_intent.updated
                - model: Payment
                  events:
                    - payment.successful
                - model: Order
                  events:
                    - order.created
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /webhooks:
    get:
      tags:
        - Webhooks
      operationId: Webhooks_GetAlSubscriptions
      summary: List all subscriptions
      description: Retrieves a list of all subscriptions.
      parameters:
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
                  example:
                    id: ws_aNkU6yob0vOMxUlghg2oynUw
                    accountId: acc_4z3k2xP17e1JQY
                    events:
                      - payment_intent.created
                      - payment_intent.status_updated
                    url: https://example.com.com/incoming-events
                    description: Demo Webhooks
                    secrets:
                      - id: sc_qNkU6yob0vOMxUlb2oynUw
                        value: U3Vic2NyaXB0aW9uUmVzcG9uc2VFeGFtcGxlIDogSUV4YW1wbGVQcm92aWRlcjxTdWJ
                        createdAt: '2023-12-13T14:15:01'
                        lastUsedAt: '2023-12-16T13:44:03.3242202Z'
                        isActive: true
                    createdAt: '2023-03-30T12:21:04.143Z'
                    updatedAt: '2023-03-30T12:21:04.143Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - Webhooks
      operationId: Webhooks_Subscribe
      summary: Subscribe to an event
      description: Creates a new subscription.
      parameters:
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
        required: true
        x-position: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
              example:
                id: ws_aNkU6yob0vOMxUlghg2oynUw
                accountId: acc_4z3k2xP17e1JQY
                events:
                  - payment_intent.created
                  - payment_intent.status_updated
                url: https://example.com.com/incoming-events
                description: Demo Webhooks
                secrets:
                  - id: sc_qNkU6yob0vOMxUlb2oynUw
                    value: U3Vic2NyaXB0aW9uUmVzcG9uc2VFeGFtcGxlIDogSUV4YW1wbGVQcm92aWRlcjxTdWJ
                    createdAt: '2023-12-13T14:15:01'
                    lastUsedAt: '2023-12-16T13:44:03.3242202Z'
                    isActive: true
                createdAt: '2023-03-30T12:21:04.143Z'
                updatedAt: '2023-03-30T12:21:04.143Z'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /webhooks/{subscriptionId}/secrets:
    get:
      tags:
        - Webhooks
      operationId: Webhooks_GetSecrets
      summary: List all secrets
      description: Retrieves a list of all secrets.
      parameters:
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
        - name: subscriptionId
          in: path
          required: true
          schema:
            type: string
          x-position: 1
          description: The unique identifier for the subscription.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretsResponse'
              example:
                id: ws_lgQzejyXb0SD8oIDE2zcqA
                secrets:
                  - id: sc_qNkU6yob0vOMxUlb2oynUw
                    value: U3Vic2NyaXB0aW9uUmVzcG9uc2VFeGFtcGxlIDogSUV4YW1wbGVQcm92aWRlcjxTdWJ
                    createdAt: '2023-12-13T14:15:01'
                    lastUsedAt: '2023-12-16T13:44:03.3656144Z'
                    isActive: true
                  - id: sc_zNkU6yob0vOMxUlb2oynUw
                    value: FGswesdsaXB0aW9uUmVzcG9wbGVQcm92aWRlcjxTdWJ
                    createdAt: '2020-12-13T14:15:01'
                    lastUsedAt: '2023-12-02T13:58:03.3656159Z'
                    isActive: false
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - Webhooks
      operationId: Webhooks_GenerateSecret
      summary: Generate a secret
      description: Generates a new secret.
      parameters:
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
        - name: subscriptionId
          in: path
          required: true
          schema:
            type: string
          x-position: 1
          description: The unique identifier for the subscription.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretsResponse'
              example:
                secrets:
                  - id: sc_qNkU6yob0vOMxUlb2oynUw
                    value: U3Vic2NyaXB0aW9uUmVzcG9uc2VFeGFtcGxlIDogSUV4YW1wbGVQcm92aWRlcjxTdWJ
                    createdAt: '2023-12-13T14:15:01'
                    lastUsedAt: '2023-12-16T13:44:03.3683851Z'
                    isActive: true
                  - id: sc_zNkU6yob0vOMxUlb2oynUw
                    value: FGswesdsaXB0aW9uUmVzcG9wbGVQcm92aWRlcjxTdWJ
                    createdAt: '2023-12-13T14:15:01'
                    lastUsedAt: '2023-12-02T13:58:03.3683861Z'
                    isActive: false
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /webhooks/{subscriptionId}/secrets/{secretId}/activate:
    put:
      tags:
        - Webhooks
      operationId: Webhooks_ActivateSecret
      summary: Activate a secret
      description: Activates a secret.
      parameters:
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
        - name: subscriptionId
          in: path
          required: true
          schema:
            type: string
          x-position: 1
          description: The unique identifier for the subscription.
        - name: secretId
          in: path
          required: true
          schema:
            type: string
          x-position: 2
          description: The unique identifier for the secret.
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /webhooks/{subscriptionId}/secrets/{secretId}:
    delete:
      tags:
        - Webhooks
      operationId: Webhooks_DeleteSecret
      summary: Delete a secret
      description: Deletes a secret.
      parameters:
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
        - name: subscriptionId
          in: path
          required: true
          schema:
            type: string
          x-position: 1
          description: The unique identifier for the subscription.
        - name: secretId
          in: path
          required: true
          schema:
            type: string
          x-position: 2
          description: The unique identifier for the secret.
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /webhooks/{subscriptionId}:
    patch:
      tags:
        - Webhooks
      operationId: Webhooks_SubscribeUpdate
      summary: Update a subscription
      description: Updates your subscription details. You can change the URL or the list of events.
      parameters:
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
        - name: subscriptionId
          in: path
          required: true
          schema:
            type: string
          x-position: 1
          description: The unique identifier for the subscription.
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionUpdateRequest'
        required: true
        x-position: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
              example:
                id: ws_aNkU6yob0vOMxUlghg2oynUw
                accountId: acc_4z3k2xP17e1JQY
                events:
                  - payment_intent.created
                  - payment_intent.status_updated
                url: https://example.com.com/incoming-events
                description: Demo Webhooks
                secrets:
                  - id: sc_qNkU6yob0vOMxUlb2oynUw
                    value: U3Vic2NyaXB0aW9uUmVzcG9uc2VFeGFtcGxlIDogSUV4YW1wbGVQcm92aWRlcjxTdWJ
                    createdAt: '2023-12-13T14:15:01'
                    lastUsedAt: '2023-12-16T13:44:03.3242202Z'
                    isActive: true
                createdAt: '2023-03-30T12:21:04.143Z'
                updatedAt: '2023-03-30T12:21:04.143Z'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Webhooks
      operationId: Webhooks_DeleteSubscriptions
      summary: Delete a subscription
      description: Deletes a subscription.
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            type: string
          x-position: 1
          description: The unique identifier for the subscription.
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /customers:
    post:
      tags:
        - Customers
      operationId: Customers_Create
      summary: Create a customer
      description: Creates a new customer.
      parameters:
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
      requestBody:
        x-name: obj
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
        required: true
        x-position: 2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerFull'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /customers/{customerId}:
    delete:
      tags:
        - Customers
      operationId: Customers_Delete
      summary: Delete a customer
      description: Deletes a customer.
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            maxLength: 100
          x-position: 2
          example: cust_qNkU6yob0vOMxUlb2oynUw
          description: The unique identifier of the customer.
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    patch:
      tags:
        - Customers
      operationId: Customers_Update
      summary: Update information about a customer
      description: Updates information about a customer.
      parameters:
        - name: customerId
          in: path
          required: true
          example: cs_qNkU6yob0vOMxUlb2oynUw
          schema:
            type: string
          description: The unique identifier of the customer.
          x-position: 2
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
      requestBody:
        x-name: updateData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerRequest'
        required: true
        x-position: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerFull'
              example:
                id: cs_qNkU6yob0vOMxUlb2oynUw
                name: Alex
                emailAddress: alex@dojo.com
                phoneNumber: '078976534161'
                documentVersion: 1
                createdAt: '2023-08-24T14:15:22Z'
                updatedAt: '2023-09-24T14:15:22Z'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    get:
      tags:
        - Customers
      operationId: Customers_Get
      summary: Retrieve a customer
      description: Retrieves the details of a customer.
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            nullable: true
          description: Unique identifiers for the customers you want to get information about, separated by commas.
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerFull'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /customers/{customerId}/create-secret:
    post:
      tags:
        - Customers
      operationId: Customers_CreateCustomerSecret
      summary: Create a customer secret
      description: 'Creates a unique customer secret key valid within a scope of time. '
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            nullable: true
            maxLength: 100
          x-position: 1
          example: cust_qNkU6yob0vOMxUlb2oynUw
          description: The unique identifier of the customer.
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSecret'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /customers/public/{customerId}/payment-methods:
    get:
      tags:
        - Customers
      operationId: Customers_GetPaymentMethods
      summary: Retrieve payment method
      description: Retrieves available payment methods for a customer.
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            nullable: true
            maxLength: 100
          x-position: 1
          example: cust_qNkU6yob0vOMxUlb2oynUw
          description: The unique identifier of the customer.
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
            x-position: 2
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
        - name: authorization
          in: header
          required: true
          schema:
            type: string
            nullable: true
            maxLength: 500
          x-position: 3
          example: 'Authorization: Basic cs_generated-customer-secret'
          description: |
            Basic HTTP authentication to grant access to customer owned resources.

            - The required customer secret key is short lived and will expire after pre-configured set of time.

            - The customer secret can be generated by calling [POST /customers/{customerId}/create-secret](#operation/Customers_CreateCustomerSecret)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPaymentMethods'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /customers/public/{customerId}/payment-methods/{paymentMethodId}:
    delete:
      tags:
        - Customers
      operationId: Customers_DeletePaymentMethod
      summary: Remove payment method
      description: |
        Delete a customer payment method.
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            nullable: true
            maxLength: 100
          x-position: 1
          example: cust_qNkU6yob0vOMxUlb2oynUw
          description: The unique identifier of the customer.
        - name: paymentMethodId
          in: path
          required: true
          schema:
            type: string
            nullable: true
            maxLength: 100
          x-position: 2
          example: pm_otRL98WURbaAKs0sdy7_5w
          description: The unique identifier of the customer payment method.
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          x-position: 3
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
        - name: authorization
          in: header
          required: true
          schema:
            type: string
            nullable: true
            maxLength: 500
          x-position: 4
          example: 'Authorization: Basic cs_generated-customer-secret'
          description: |
            Basic HTTP authentication to grant access to customer owned resources.

            - The required customer secret key is short lived and will expire after pre-configured set of time.

            - The customer secret can be generated by calling [POST /customers/{customerId}/create-secret](#operation/Customers_CreateCustomerSecret)
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /customers/search:
    post:
      tags:
        - Customers
      operationId: Customers_Search
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCustomerRequest'
        required: true
        x-position: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfCustomer'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      parameters:
        - name: version
          in: header
          required: true
          schema:
            type: string
            format: date
          example: Pre-release
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
      summary: List all customers
      description: |-
        Retrieves a list of customers.
        Results are paginated. By default, the method returns up to 50 customers.
  /terminals:
    get:
      tags:
        - Terminals
      parameters:
        - name: statuses
          description: A machine-readable value describing the state of the terminal. Terminals with any of the statuses provided in this parameter will be listed.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TerminalStatus'
          in: query
        - example: Pre-release
          name: version
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
          schema:
            format: date
            type: string
          in: header
          required: true
        - $ref: '#/components/parameters/SoftwareHouseId'
        - $ref: '#/components/parameters/ResellerId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Terminal'
                example:
                  - id: '123123'
                    status: Available
                    updatedAt: '2022-03-30T12:21:04.143Z'
          description: A list of terminals.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
      operationId: Terminals_ListTerminals
      summary: Retrieve all terminals
      description: Allows you to retrieve details of all terminals.
  /terminals/{terminalId}:
    get:
      tags:
        - Terminals
      parameters:
        - example: '123123'
          name: terminalId
          description: The unique identifier for the terminal.
          schema:
            type: string
          in: path
          required: true
          x-position: 1
        - example: Pre-release
          name: version
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
          schema:
            format: date
            type: string
          in: header
          required: true
        - $ref: '#/components/parameters/SoftwareHouseId'
        - $ref: '#/components/parameters/ResellerId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Terminal'
          description: Terminal
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      operationId: Terminals_GetTerminal
      summary: Retrieve a terminal
      description: Retrieve a terminal by using its ID.
  /terminal-sessions:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTerminalSessionRequest'
        required: true
      tags:
        - Terminals
      parameters:
        - example: Pre-release
          name: version
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
          schema:
            format: date
            type: string
          in: header
          required: true
        - $ref: '#/components/parameters/SoftwareHouseId'
        - $ref: '#/components/parameters/ResellerId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalSession'
              example:
                terminalId: '123123'
                createdAt: '2023-08-24T14:15:22Z'
                updatedAt: '2023-08-24T14:15:22Z'
                id: ts_sandbox_RBMHTJ4fIkmSppDILZVCGw
                status: InitiateRequested
                expireAt: '2023-08-24T14:15:22Z'
                statusEvents:
                  - status: InitiateRequested
                    createdAt: '2023-08-24T14:15:22Z'
                    debugMessage: Troubleshooting message
                notificationEvents: []
                details:
                  sessionType: Sale
                  sale:
                    paymentIntentId: pi_sandbox_RBMHTJ4fIkmSppDILZVCGw
          description: Terminal session created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not found
      operationId: TerminalSession_Create
      summary: Create a session on a terminal
  /terminal-sessions/{terminalSessionId}:
    get:
      tags:
        - Terminals
      parameters:
        - name: terminalSessionId
          description: The unique identifier for the terminal session.
          schema:
            type: string
          in: path
          required: true
          x-position: 2
        - example: Pre-release
          name: version
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
          schema:
            format: date
            type: string
          in: header
          required: true
        - $ref: '#/components/parameters/SoftwareHouseId'
        - $ref: '#/components/parameters/ResellerId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalSession'
              example:
                terminalId: '123123'
                createdAt: '2023-08-24T14:13:22Z'
                updatedAt: '2023-08-24T14:14:22Z'
                id: ts_sandbox_RBMHTJ4fIkmSppDILZVCGw
                status: Captured
                expireAt: '2023-08-24T14:15:22Z'
                notificationEvents:
                  - notificationType: PresentCard
                    createdAt: '2023-08-24T14:15:22Z'
                  - notificationType: PleaseWait
                    createdAt: '2023-08-24T14:15:26Z'
                  - notificationType: InsertCard
                    createdAt: '2023-08-24T14:15:28Z'
                  - notificationType: EnterPin
                    createdAt: '2023-08-24T14:15:40Z'
                  - notificationType: PleaseWait
                    createdAt: '2023-08-24T14:15:43Z'
                  - notificationType: Approved
                    createdAt: '2023-08-24T14:15:48Z'
                  - notificationType: RemoveCard
                    createdAt: '2023-08-24T14:15:52Z'
                statusEvents:
                  - status: InitiateRequested
                    createdAt: '2023-08-24T14:15:22Z'
                    debugMessage: Troubleshooting message
                  - status: Initiated
                    createdAt: '2023-08-24T14:15:42Z'
                    debugMessage: Troubleshooting message
                  - status: Captured
                    createdAt: '2023-08-24T14:15:52Z'
                    debugMessage: Troubleshooting message
                customerReceipt:
                  lines:
                    - formats:
                        - Bold
                      value: Monica's Shop
                      lineType: Text
                merchantReceipt:
                  lines:
                    - formats:
                        - Bold
                      value: Monica's Shop
                      lineType: Text
                paymentIntentId: pi_sandbox_RBMHTJ4fIkmSppDILZVCGw
                sessionType: Sale
          description: Terminal session created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not found
      operationId: TerminalSession_Get
      summary: Retrieve a terminal session
  /terminal-sessions/{terminalSessionId}/cancel:
    put:
      tags:
        - Terminals
      parameters:
        - name: terminalSessionId
          description: The unique identifier for the terminal session.
          schema:
            type: string
          in: path
          required: true
          x-position: 2
        - example: Pre-release
          name: version
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
          schema:
            format: date
            type: string
          in: header
          required: true
        - $ref: '#/components/parameters/SoftwareHouseId'
        - $ref: '#/components/parameters/ResellerId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalSession'
              example:
                terminalId: '123123'
                createdAt: '2023-08-24T14:15:22Z'
                updatedAt: '2023-08-24T14:15:22Z'
                id: ts_sandbox_RBMHTJ4fIkmSppDILZVCGw
                status: CancelRequested
                expireAt: '2023-08-24T14:15:22Z'
                notificationEvents:
                  - notificationType: Approved
                    createdAt: '2023-08-24T14:15:22Z'
                statusEvents:
                  - status: CancelRequested
                    createdAt: '2023-08-24T14:15:22Z'
                    debugMessage: Troubleshooting message
                paymentIntentId: pi_sandbox_RBMHTJ4fIkmSppDILZVCGw
                sessionType: Sale
          description: Terminal session requested to be canceled.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Session cannot be canceled.
      operationId: TerminalSession_Cancel
      summary: Request a terminal session to be canceled
  /terminal-sessions/{terminalSessionId}/signature:
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureVerificationRequest'
        required: true
      tags:
        - Terminals
      parameters:
        - name: terminalSessionId
          description: The unique identifier for the terminal session.
          schema:
            type: string
          in: path
          required: true
          x-position: 2
        - example: Pre-release
          name: version
          description: The API version with format yyyy-mm-dd. The current version is `Pre-release`.
          schema:
            format: date
            type: string
          in: header
          required: true
        - $ref: '#/components/parameters/SoftwareHouseId'
        - $ref: '#/components/parameters/ResellerId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalSession'
              example:
                terminalId: '123123'
                createdAt: '2023-08-24T14:15:22Z'
                updatedAt: '2023-08-24T14:15:22Z'
                id: ts_sandbox_RBMHTJ4fIkmSppDILZVCGw
                status: SignatureVerificationAccepted
                expireAt: '2023-08-24T14:15:22Z'
                notificationEvents:
                  - notificationType: Approved
                    createdAt: '2023-08-24T14:15:22Z'
                statusEvents:
                  - status: SignatureVerificationAccepted
                    createdAt: '2023-08-24T14:15:22Z'
                    debugMessage: Troubleshooting message
                paymentIntentId: pi_sandbox_RBMHTJ4fIkmSppDILZVCGw
                sessionType: Sale
          description: Terminal session signature verification response recorded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Session cannot be canceled.
      operationId: TerminalSession_Signature
      summary: Respond to a signature verification request
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    CaptureMode:
      title: CaptureMode
      description: ' '
      default: Auto
      enum:
        - Auto
        - Manual
      type: string
      x-enumNames:
        - Auto
        - Manual
    CurrencyCode:
      description: Three-letter currency code in [ISO 4217 alpha-3](https://en.wikipedia.org/wiki/ISO_4217) format.
      enum:
        - GBP
      type: string
    Money:
      title: Money
      required:
        - value
        - currencyCode
      type: object
      properties:
        value:
          format: int32
          description: The amount in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) minor units, for example, "100" for 1.00 GBP.
          type: integer
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
          description:
            $ref: ../../../prose/parameters/currencyCode.md
          maxLength: 10
          minLength: 1
      example:
        value: 1000
        currencyCode: GBP
    Customer:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          nullable: true
          description: The unique identifier of the customer.
        emailAddress:
          type: string
          maxLength: 254
          description: The customer's email address.
          nullable: true
        phoneNumber:
          type: string
          maxLength: 50
          description: The customer's phone number.
          nullable: true
      description: Details about the customer.
      title: Customer
      example:
        emailAddress: support@dojo.com
        phoneNumber: '+448000443550'
    Address:
      type: object
      additionalProperties: false
      example:
        address1: The Brunel Building
        address2: 2 Canalside Walk
        city: London
        postcode: W2 1DG
        countryCode: GB
        county: UK
      description: Details about the address.
      properties:
        address1:
          type: string
          maxLength: 100
          description: Address line 1 (for example, company name).
          nullable: true
        address2:
          type: string
          maxLength: 100
          description: Address line 2 (for example, street, apartment, or suite).
          nullable: true
        address3:
          type: string
          maxLength: 100
          description: Address line 3.
          nullable: true
        address4:
          type: string
          maxLength: 100
          description: Address line 4.
          nullable: true
        city:
          type: string
          maxLength: 100
          description: City, town, district, suburb, or village.
          example: London
          nullable: true
        state:
          type: string
          maxLength: 100
          description: State, province, or region.
          nullable: true
        postcode:
          type: string
          maxLength: 50
          description: ZIP or postal code.
          nullable: true
        countryCode:
          type: string
          maxLength: 10
          description: ' Two-letter country code in [ISO 3166–1-alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.'
          example: GB
          nullable: false
        locality:
          type: string
          maxLength: 100
          description: Locality, can use in addition to city.
          nullable: true
        county:
          type: string
          maxLength: 100
          description: County or zone.
          nullable: true
      title: Address
      required:
        - countryCode
    ShippingDetails:
      type: object
      title: ShippingDetails
      additionalProperties: false
      description: Details about the shipping.
      properties:
        name:
          type: string
          maxLength: 100
          description: The name of the customer.
          nullable: true
        deliveryNotes:
          maxLength: 1024
          type: string
          description: The delivery notes.
          nullable: true
        address:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/Address'
          description: Details about the address.
    TransactionSource:
      title: TransactionSource
      description: Payments initiated through mail, telephone, or internet order. These payments are keyed manually by the merchant using a secure payment page, for example Dojo for Business, or a card machine. No physical cards are present during a MOTO transaction and these transactions don't require authentication of the cardholder using 3DS, or a chip and a pin.
      enum:
        - MOTO
        - Store
      type: string
    PaymentIntentConfigCustomerEmail:
      type: object
      additionalProperties: false
      title: PaymentIntentConfigCustomerEmail
      description: Include a configurable customer email address as part of the payment intent. Configurable fields can be altered later by [updating](./payments/manage-payments/change-amount) the payment intent.
      properties:
        collectionRequired:
          type: boolean
          description: If has the value `true` the object will be collected.
          default: false
    PaymentIntentConfigDetails:
      type: object
      additionalProperties: false
      properties:
        showTotal:
          type: boolean
          description: If has the value `true`, the total order amount will be showed.
        showReference:
          type: boolean
          description: If the value is `true`, the order reference ID will be shown.
    PaymentIntentConfigBillingAddress:
      type: object
      title: PaymentIntentConfigBillingAddress
      additionalProperties: false
      properties:
        collectionRequired:
          type: boolean
          description: If has the value `true` the object will be collected.
    PaymentIntentConfigShippingDetails:
      type: object
      title: PaymentIntentConfigShippingDetails
      additionalProperties: false
      properties:
        collectionRequired:
          type: boolean
          description: If has the value `true` the object will be collected.
    PaymentConfigDetails:
      type: object
      additionalProperties: false
      title: PaymentConfigDetails
      properties:
        customAmountAllowed:
          type: boolean
          description: If has the value `true` the amount of the payment intent can be changed.
        tipsAllowed:
          type: boolean
          description: If has the value `true` tips are allowed.
    PaymentIntentConfigRequest:
      type: object
      additionalProperties: false
      title: PaymentIntentConfigRequest
      properties:
        title:
          type: string
          maxLength: 100
          description: The [checkout page’s title](../payments/accept-payments/checkout-page/configuration#add-information-about-your-company).
          nullable: true
        redirectUrl:
          type: string
          format: uri
          description: The URL that a customer will be directed to after payment.
          nullable: true
        cancelUrl:
          type: string
          format: uri
          description: The URL that a customer will be directed to when canceling a payment.
          nullable: true
        customerEmail:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PaymentIntentConfigCustomerEmail'
          description: Configuration of the customer's email address.
        details:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PaymentIntentConfigDetails'
          description: |
            The following configuration details of the payment intent. See [detailed information about the order and taxes](../payments/accept-payments/checkout-page/configuration#show-detailed-information-about-the-order-and-taxes).

            - The total order amount including tax.
            - The order reference ID.
        billingAddress:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PaymentIntentConfigBillingAddress'
          description: Configuration of the billing address.
        shippingDetails:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PaymentIntentConfigShippingDetails'
          description: ' Configuration of the shipping details.'
        payment:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PaymentConfigDetails'
          description: Configuration of the payment.
    RequestSecurity:
      type: object
      additionalProperties: false
      title: RequestSecurity
      description: Customer's device information.
      properties:
        userAgent:
          type: string
          maxLength: 300
          description: The customer's browser agent.
          nullable: true
        ipAddress:
          maxLength: 70
          type: string
          description: The customer's device IP address.
          nullable: true
        device:
          maxLength: 120
          type: string
          description: The customer's device type.
          nullable: true
      example:
        userAgent: null
        ipAddress: null
        device: null
    Modifier:
      description: Modifiers affect how the bill is calculated and therefore change the bill total. Common examples are Buy One, Get One Free deals, or discounts for students or senior citizens.
      required:
        - name
        - amountPerModifier
        - quantity
        - id
      type: object
      properties:
        name:
          description: A human-readable name of the modifier.
          type: string
        amountPerModifier:
          allOf:
            - $ref: '#/components/schemas/Money'
          description: Total amount to be paid for this modifier. Positive if it's an additional charge, negative if that's a discount. Note this modifier price shouldn't be included in the parent `amountTotal`.
        quantity:
          description: How many times this modifier is applied to the item. Please note that this amount is per single item, so if a customer orders two burgers each with double extra cheese, the quantity should be 2, not 4.
          type: integer
        id:
          description: A machine-readable identifier of this modifier.
          type: string
    ItemLine:
      title: ItemLine
      description: The item line object.
      required:
        - amountTotal
      type: object
      properties:
        id:
          nullable: true
          description: The unique identifier for the object.
          maxLength: 60
          type: string
        quantity:
          format: int32
          description: The quantity of items being purchased.
          type: integer
        caption:
          nullable: true
          description: A name of the item.
          maxLength: 100
          type: string
        category:
          description: The type of modifier, for easy identification.
          type: string
        modifiers:
          description: Mutations to apply to this item line.
          type: array
          items:
            $ref: '#/components/schemas/Modifier'
        amountTotal:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Money'
          description: The total amount, before applying discounts and taxes.
      additionalProperties: false
    TaxLine:
      title: TaxLine
      description: The tax line object.
      required:
        - amountTotal
      type: object
      properties:
        id:
          description: The unique identifier for the object.
          maxLength: 60
          type: string
        caption:
          description: A name of the tax.
          maxLength: 100
          type: string
        subCaption:
          nullable: true
          description: A sub-name of the tax.
          maxLength: 100
          type: string
        amountTotal:
          allOf:
            - $ref: '#/components/schemas/Money'
          description: Total amount of taxes.
      additionalProperties: false
    PaymentMethod:
      type: string
      description: The payment methods that customers can use to pay.
      enum:
        - Card
        - Wallet
    ActionType:
      type: string
      title: ActionType
      x-enumNames:
        - OpenLink
        - DownloadFile
      description: The type of action associated with the link.
      enum:
        - OpenLink
        - DownloadFile
      default: OpenLink
    ActionLink:
      type: object
      title: ActionLink
      additionalProperties: false
      description: The link to the payment's associated actions.
      properties:
        url:
          type: string
          format: uri
          minLength: 1
          description: The link URL.
        action:
          $ref: '#/components/schemas/ActionType'
          nullable: true
        label:
          type: string
          maxLength: 60
          minLength: 1
          description: Custom label given to the action.
        fileName:
          maxLength: 256
          type: string
          description: Filename of the document.
          nullable: true
      required:
        - url
        - label
      example:
        url: https://docs.dojo.tech/payments/getting-started
        label: docs-link
    AutoExpireAction:
      description: ' '
      enum:
        - Release
        - Capture
      type: string
      x-enumNames:
        - Release
        - Capture
    CreatePaymentIntentRequest:
      title: CreatePaymentIntentRequest
      description: The payment intent request object.
      required:
        - amount
        - reference
      type: object
      properties:
        captureMode:
          description: |-
            The type of capture for the payment, where
            - `Auto` payments are captured automatically, once authorization is complete.
            - `Manual` payments are captured only when a request is made.
          oneOf:
            - $ref: '#/components/schemas/CaptureMode'
        amount:
          description: The amount intended to be collected by this payment intent excluding `gratuityAmount` and `cashbackAmount`.
          allOf:
            - $ref: '#/components/schemas/Money'
        tipsAmount:
          description: The tip amount.
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Money'
        reference:
          type: string
          minLength: 1
          maxLength: 60
          description: Details of the reference for the payment.
        description:
          type: string
          maxLength: 4096
          description: The payment description.
          nullable: true
        customer:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/Customer'
          description: Details about the customer.
        billingAddress:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/Address'
          description: The recipient's invoicing address.
        shippingDetails:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ShippingDetails'
          description: The recipient's shipping address.
        transactionSource:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/TransactionSource'
          description: Information about the transaction source type.
        config:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PaymentIntentConfigRequest'
          description: Details about the payment intent configuration.
        requestSecurity:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/RequestSecurity'
          description: Customer's device information.
        itemLines:
          type: array
          description: The line items purchased by the customer.
          nullable: true
          items:
            $ref: '#/components/schemas/ItemLine'
        taxLines:
          type: array
          description: The taxes applied to the items.
          nullable: true
          items:
            $ref: '#/components/schemas/TaxLine'
        paymentMethods:
          type: array
          description: The payment methods that customers can use to pay.
          nullable: true
          items:
            $ref: '#/components/schemas/PaymentMethod'
        actionLink:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ActionLink'
          description: The link to the payment's associated actions.
        expireAt:
          type: string
          format: date-time
          description: The timestamp and date of when a payment intent will be voided, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format. This occurs when a payment intent is created and not yet authorized. If `null`, the payment intent is voided after 30 days.
          nullable: true
        autoExpireIn:
          type: string
          format: timespan
          description: |-
            The time interval after which `paymentIntent: Manual` will be captured or reversed, in `dd.hh:MM:ss` format.
            The timestamp value must be more than 30 seconds and less than 7 days.
          nullable: true
        autoExpireAction:
          type: string
          oneOf:
            - $ref: '#/components/schemas/AutoExpireAction'
          description: |
            The action that happens after the `Manual` payment intents expire after the time interval that is set in the `autoExpireIn` parameter.
          nullable: true
        metadata:
          type: object
          additionalProperties:
            type: string
          description: A set of key-value pairs that you can use to store additional information.
          nullable: true
        setupIntentId:
          type: string
          nullable: true
          description: The unique identifier for the setup intent.
        cashbackAmount:
          description: The amount of cashback applied.
          allOf:
            - $ref: '#/components/schemas/Money'
        serviceChargeAmount:
          allOf:
            - $ref: '#/components/schemas/Money'
          description: The amount of service charge applied.
      additionalProperties: false
      example:
        amount:
          value: 1000
          currencyCode: GBP
        reference: Order 234
        description: Demo payment intent
        terminalId: '1'
        captureMode: Auto
        refund: false
    PaymentDetails:
      type: object
      additionalProperties: false
      description: The payment details object.
      title: PaymentDetails
      properties:
        transactionDateTime:
          type: string
          description: The date and time of the payment in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format.
          nullable: true
        message:
          type: string
          description: The description of the operation.
          nullable: true
        authCode:
          type: string
          description: The acquirer's authorization code. This code is returned on a successful transaction.
          nullable: true
        cardNumber:
          type: string
          description: The card number.
          nullable: true
        cardName:
          type: string
          description: The name of the cardholder.
          nullable: true
        expiryDate:
          type: string
          description: The expiry month and year in MM/YY format.
          nullable: true
        cardType:
          type: string
          description: The card scheme.
          nullable: true
    PaymentIntentStatus:
      title: PaymentIntentStatus
      description: Current status of the payment intent.
      enum:
        - Created
        - Authorized
        - Captured
        - Reversed
        - Refunded
        - Canceled
      type: string
    PaymentIntentConfigResponse:
      type: object
      additionalProperties: false
      title: PaymentIntentConfigResponse
      properties:
        title:
          type: string
          maxLength: 100
          description: The [checkout page’s title](../payments/accept-payments/checkout-page/configuration#add-information-about-your-company).
          nullable: true
        redirectUrl:
          type: string
          format: uri
          description: The URL that a customer will be directed to after payment.
          nullable: true
        cancelUrl:
          type: string
          format: uri
          description: The URL that a customer will be directed to when canceling a payment.
          nullable: true
        customerEmail:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PaymentIntentConfigCustomerEmail'
          description: Configuration of the customer's email address.
        details:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PaymentIntentConfigDetails'
          description: |
            The following configuration details of the payment intent. See [detailed information about the order and taxes](../payments/accept-payments/checkout-page/configuration#show-detailed-information-about-the-order-and-taxes).

            - The total order amount including tax.
            - The order reference ID.
        billingAddress:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PaymentIntentConfigBillingAddress'
          description: Configuration of the billing address.
        shippingDetails:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PaymentIntentConfigShippingDetails'
          description: ' Configuration of the shipping details.'
        payment:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PaymentConfigDetails'
          description: Configuration of the payment.
    CardScheme:
      description: Supported card schemes.
      enum:
        - VISA
        - MASTERCARD
        - MAESTRO
        - DISCOVER
        - DCI
        - AMEX
      type: string
      x-enumNames:
        - VISA
        - MASTERCARD
        - MAESTRO
        - DISCOVER
        - DCI
        - AMEX
    WalletPaymentOption:
      type: string
      description: Wallet payment options.
      x-enumNames:
        - APPLE_PAY
        - GOOGLE_PAY
      enum:
        - APPLE_PAY
        - GOOGLE_PAY
    SupportedPaymentMethods:
      type: object
      additionalProperties: false
      properties:
        cardSchemes:
          type: array
          nullable: true
          description: Supported card schemes.
          items:
            $ref: '#/components/schemas/CardScheme'
        wallets:
          type: array
          nullable: true
          description: List of supported payment wallets.
          items:
            $ref: '#/components/schemas/WalletPaymentOption'
    MerchantConfig:
      type: object
      additionalProperties: false
      description: Details about the merchant configuration.
      title: MerchantConfig
      properties:
        supportedPaymentMethods:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/SupportedPaymentMethods'
          description: Supported payment methods.
    PaymentIntent:
      type: object
      additionalProperties: false
      description: The PaymentIntent object.
      title: PaymentIntent
      properties:
        id:
          type: string
          description: |
            The unique identifier for the payment intent.
          nullable: true
        captureMode:
          $ref: '#/components/schemas/CaptureMode'
        clientSessionSecret:
          type: string
          description: The client secret.
          nullable: true
        clientSessionSecretExpirationDate:
          type: string
          format: date-time
          description: The expiration date of `clientSessionSecret`.
        paymentDetails:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PaymentDetails'
          description: Details about the payment.
        status:
          $ref: '#/components/schemas/PaymentIntentStatus'
        paymentMethods:
          type: array
          description: The payment methods that customers can use to pay.
          nullable: true
          items:
            $ref: '#/components/schemas/PaymentMethod'
        amount:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Money'
          description: The amount intended to be collected by this payment intent excluding `gratuityAmount` and `cashbackAmount`.
        tipsAmount:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Money'
          description: The tip amount.
        requestedAmount:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Money'
          description: The amount that was requested by this Payment intent.
        totalAmount:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Money'
          description: The total amount after applying discounts and taxes.
        refundedAmount:
          nullable: true
          type: integer
          description: The amount that was [refunded](../payments/manage-payments/cancellation-payments/refund).
          format: int64
        customer:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/Customer'
          description: Details about the customer.
        requestSecurity:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/RequestSecurity'
          description: Customer's device information.
        billingAddress:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/Address'
          description: The recipient's invoicing address.
        shippingDetails:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ShippingDetails'
          description: The recipient's shipping address.
        transactionSource:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/TransactionSource'
          description: Information about the transaction source type.
        createdAt:
          type: string
          format: date-time
          description: The timestamp of the create date, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format.
        updatedAt:
          type: string
          format: date-time
          description: The timestamp of the update date, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format.
        reference:
          type: string
          description: Details of the reference for the payment.
          nullable: true
        description:
          type: string
          description: The payment description.
          nullable: true
        subtotalLineItems:
          allOf:
            - $ref: '#/components/schemas/Money'
          description: The total amount after applying discounts and taxes.
          nullable: true
        itemLines:
          type: array
          description: The line items purchased by the customer.
          nullable: true
          items:
            $ref: '#/components/schemas/ItemLine'
        taxLines:
          type: array
          description: The taxes applied to the items.
          nullable: true
          items:
            $ref: '#/components/schemas/TaxLine'
        actionLink:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ActionLink'
          description: The link to the payment's associated actions.
        config:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PaymentIntentConfigResponse'
          description: Details about the payment intent configuration.
        merchantConfig:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/MerchantConfig'
          description: Details about payment intent merchant configuration.
        expireAt:
          type: string
          format: date-time
          description: The timestamp and date of when a payment intent will be voided, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format. This occurs when a payment intent is created and not yet authorized. If `null`, the payment intent is voided after 30 days.
          nullable: true
        autoExpireIn:
          type: string
          nullable: true
          format: timespan
          description: |-
            The time interval after which `paymentIntent: Manual` will be captured or reversed, in `dd.hh:MM:ss` format.
            The timestamp value must be more than 30 seconds and less than 7 days.
        autoExpireAction:
          type: string
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/AutoExpireAction'
          description: |
            The action that happens after the `Manual` payment intents expire after the time interval that is set in the `autoExpireIn` parameter.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: A set of key-value pairs that you can use to store additional information.
          nullable: true
        cashbackAmount:
          allOf:
            - $ref: '#/components/schemas/Money'
          description: The amount of cashback applied.
        serviceChargeAmount:
          allOf:
            - $ref: '#/components/schemas/Money'
          description: The amount of service charge applied.
    ErrorCode:
      description: Machine-usable code describing an error.
      enum:
        - INTERNAL_ERROR
        - TERMINAL_UNAVAILABLE
        - INVALID_REQUEST
      type: string
    Error:
      description: An object containing information about an error that occurred as part of an API request.
      required:
        - code
        - title
        - type
        - status
        - traceId
        - errors
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode'
          description:
            $ref: ../../../prose/parameters/errorCode.md
        title:
          description: |
            A short, human-readable summary of the error.
          type: string
        type:
          description: |
            A URI reference [RFC 3986](https://datatracker.ietf.org/doc/html/rfc3986) that identifies the problem type.
          type: string
        status:
          description: |
            The [HTTP status code](#section/HTTP-Responses).
          type: integer
        detail:
          description: |
            A human-readable message giving more details about the error. Not always present.
          type: string
        traceId:
          description: |
            The unique identifier of the failing request.
          type: string
        errors:
          description: An object containing information about an error that occurred as part of an API request.
          type: object
          additionalProperties:
            type: array
            items:
              type: string
    CreateCaptureRequest:
      title: CreateCaptureRequest
      description: The capture request object.
      required:
        - amount
      type: object
      properties:
        amount:
          allOf:
            - $ref: '#/components/schemas/Money'
          description: The capture amount. You can capture the full amount or a partial amount.
      additionalProperties: false
      example:
        amount:
          currencyCode: GBP
          value: 1000
    Capture:
      title: Capture
      description: The capture response object.
      type: object
      properties:
        message:
          description: The description of the operation.
          type: string
        captureId:
          description: The unique identifier for the capture.
          type: string
      additionalProperties: false
      example:
        message: Demo capture
        id: cp_itIiJMEAvES3ynYF_Yhs2g
    CaptureStatus:
      title: CaptureStatus
      type: string
      description: Current capture status.
      x-enumNames:
        - Created
        - Successful
        - Declined
        - Failed
      enum:
        - Created
        - Successful
        - Declined
        - Failed
    ChargeResponse:
      type: object
      description: The charge response object.
      additionalProperties: false
      title: Charge
      properties:
        paymentIntentId:
          type: string
          description: |
            The unique identifier for the payment intent.
          nullable: true
        status:
          $ref: '#/components/schemas/CaptureStatus'
        message:
          type: string
          description: The description of the operation.
    ProblemDetails:
      type: object
      title: ProblemDetails
      description: ''
      required:
        - detail
        - status
        - title
        - traceId
        - type
        - errors
      properties:
        type:
          type: string
          nullable: true
          description: A URI reference [RFC 3986](https://datatracker.ietf.org/doc/html/rfc3986) that identifies the problem type.
        title:
          type: string
          nullable: true
          description: A short, human-readable summary of the error.
        status:
          type: integer
          format: int32
          nullable: true
          description: The [HTTP status code](#section/HTTP-Responses).
        detail:
          type: string
          nullable: true
          description: An optional, human-readable message giving more details about the error.
        traceId:
          type: string
          nullable: true
          description: The unique identifier of the failing request.
        errors:
          type: object
          nullable: true
          description: A human-readable explanation of errors.
          additionalProperties: {}
    Cursor:
      type: object
      additionalProperties: false
      description: 'A cursor for use in pagination. '
      properties:
        limit:
          type: integer
          format: int32
          minimum: 1
          maximum: 100
          example: 20
          default: 50
          description: The maximum number of results to be returned in a single page.
        before:
          type: string
          description: A cursor for use in pagination for the previous page. `before` and `after` are mutually exclusive. Only one of these may be used.
          nullable: true
        after:
          type: string
          description: A cursor for use in pagination for the next page. `before` and `after` are mutually exclusive. Only one of these may be used.
          nullable: true
    SearchPaymentIntentRequest:
      type: object
      additionalProperties: false
      description: Request a list of payment intents with specified filtering criteria.
      properties:
        statuses:
          type: array
          description: Statuses of requested payment intents.
          nullable: true
          items:
            $ref: '#/components/schemas/PaymentIntentStatus'
        startDate:
          type: string
          format: date-time
          description: Date and time from which to search, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format.
          nullable: true
        endDate:
          type: string
          format: date-time
          description: Date and time until which to search in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format.
          nullable: true
        cursor:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/Cursor'
          description: 'A cursor for use in pagination. '
      example:
        statuses:
          - Created
        startDate: '2023-08-24T14:15:22Z'
        endDate: '2023-08-24T14:15:22Z'
        cursor:
          limit: 20
    PagedResultOfPaymentIntent:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          nullable: true
          description: An array of payment intents.
          items:
            $ref: '#/components/schemas/PaymentIntent'
        before:
          type: string
          description: A cursor for use in pagination for the previous page.
          nullable: true
        after:
          type: string
          description: A cursor for use in pagination for the next page.
          nullable: true
    PagedPaymentIntent:
      allOf:
        - $ref: '#/components/schemas/PagedResultOfPaymentIntent'
        - type: object
          additionalProperties: false
    SetTipsAmountRequest:
      description: The tip amount.
      type: object
      properties:
        tipsAmount:
          allOf:
            - $ref: '#/components/schemas/Money'
          description: The tip amount.
      required:
        - tipsAmount
      example:
        tipsAmount:
          value: 500
          currencyCode: GBP
    SetAmountRequest:
      title: SetAmountRequest
      description: Send a request to set an amount.
      required:
        - amount
      type: object
      properties:
        amount:
          allOf:
            - $ref: '#/components/schemas/Money'
          description: The amount intended to be collected by this payment intent excluding `gratuityAmount` and `cashbackAmount`.
      additionalProperties: false
      example:
        amount:
          value: 1000
          currencyCode: GBP
    SendEmailReceiptRequest:
      title: SendEmailReceiptRequest
      type: object
      properties:
        emails:
          type: array
          description: The list of email addresses to which the receipt should be sent.
          items:
            type: string
      required:
        - emails
      description: Request to send an email receipt to one or more specified addresses.
      example:
        emails:
          - gabriel@dojo.com
          - mari@dojo.com
    CreateRefundRequest:
      title: CreateRefundRequest
      description: The create refund request object.
      required:
        - amount
      type: object
      properties:
        amount:
          allOf:
            - $ref: '#/components/schemas/Money'
          description: The refund amount.
        refundReason:
          description: The reason for the refund.
          maxLength: 1024
          type: string
        notes:
          description: A description for the refund, if applicable.
          maxLength: 4096
          type: string
      additionalProperties: false
      example:
        amount:
          value: 1000
          currency: GBP
        refundReason: Demo refund
    Refund:
      type: object
      additionalProperties: false
      properties:
        paymentIntentId:
          type: string
          description: |
            The unique identifier for the payment intent.
          nullable: true
        refundId:
          type: string
          description: The unique identifier for the refund.
          nullable: true
        refundReason:
          type: string
          description: The reason for the refund.
          nullable: true
        notes:
          type: string
          description: A description for the refund, if applicable.
          nullable: true
      description: The refund response object.
      title: Refund
      example:
        paymentIntentId: pi_sandbox_RBMHTJ4fIkmSppDILZVCGw
        refundId: rfnd_127usj
        refundReason: Demo refund
        notes: null
    CreateReversalRequest:
      description: ''
      type: object
      properties:
        reason:
          description: The cause of this reversal.
          maxLength: 128
          type: string
    Reversal:
      title: Reversal
      description: The create reversal response object.
      type: object
      properties:
        message:
          description: The description of the operation.
          type: string
        reversalId:
          description: The unique identifier for the reversal.
          type: string
      additionalProperties: false
      example:
        id: rvs_127usj
    MerchantInitiatedTransactionType:
      type: string
      description: Details about the merchant-initiated transaction type.
      title: MerchantInitiatedTransactionType
      x-enumNames:
        - NoShow
      enum:
        - NoShow
    CreateSetupIntentRequest:
      type: object
      description: The setup intent request object.
      additionalProperties: false
      title: CreateSetupIntentRequest
      required:
        - reference
        - merchantInitiatedTransactionType
        - terms
        - intendedAmount
      properties:
        reference:
          type: string
          minLength: 1
          maxLength: 60
          description: Details of the reference for the payment.
        description:
          type: string
          maxLength: 4096
          description: The payment description.
          nullable: true
        expireAt:
          type: string
          format: date-time
          description: The timestamp and date of when a setup intent will be voided, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. This occurs when a setup intent is created and not yet authorized.
          nullable: true
        customer:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/Customer'
          description: Details about the customer.
        captureMode:
          description: |-
            The type of capture for the payment, where
            - `Auto` payments are captured automatically, once authorization is complete.
            - `Manual` payments are captured only when a request is made.
          oneOf:
            - $ref: '#/components/schemas/CaptureMode'
        paymentMethods:
          type: array
          description: The payment methods that customers can use to pay.
          nullable: true
          items:
            $ref: '#/components/schemas/PaymentMethod'
        billingAddress:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/Address'
          description: The recipient's invoicing address.
        shippingDetails:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ShippingDetails'
          description: The recipient's shipping address.
        config:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PaymentIntentConfigRequest'
          description: Details about the payment intent configuration.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: A set of key-value pairs that you can use to store additional information.
          nullable: true
        intendedAmount:
          description: The amount intended to be collected by this setup intent.
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Money'
        merchantInitiatedTransactionType:
          $ref: '#/components/schemas/MerchantInitiatedTransactionType'
        terms:
          description: The terms that customers are required to review before adding a card to the setup intent.
          type: string
          maxLength: 10240
          minLength: 1
    SetupIntentStatus:
      type: string
      description: Current status of the setup intent.
      title: SetupIntentStatus
      x-enumNames:
        - Created
        - Authorized
        - Canceled
        - Completed
        - Expired
        - CardExpired
      enum:
        - Created
        - Authorized
        - Canceled
        - Completed
        - Expired
        - CardExpired
    SetupIntentPublicResponse:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          nullable: true
          description: The unique identifier for the setup intent.
        clientSessionSecret:
          type: string
          description: The client secret.
          nullable: true
        clientSessionSecretExpirationDate:
          type: string
          format: date-time
          description: The expiration date of `clientSessionSecret`.
        status:
          $ref: '#/components/schemas/SetupIntentStatus'
        paymentMethods:
          type: array
          description: The payment methods that customers can use to pay.
          nullable: true
          items:
            $ref: '#/components/schemas/PaymentMethod'
        customer:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/Customer'
          description: Details about the customer.
        billingAddress:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/Address'
          description: The recipient's invoicing address.
        shippingDetails:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ShippingDetails'
          description: The recipient's shipping address.
        createdAt:
          type: string
          format: date-time
          description: The timestamp of the create date, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format.
        updatedAt:
          type: string
          format: date-time
          description: The timestamp of the update date, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format.
        expireAt:
          type: string
          format: date-time
          description: The timestamp and date of when a setup intent will be voided, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. This occurs when a setup intent is created and not yet authorized.
          nullable: true
        reference:
          type: string
          description: Details of the reference for the payment.
          nullable: true
        description:
          type: string
          description: The payment description.
          nullable: true
        merchantConfig:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/MerchantConfig'
          description: Details about payment intent merchant configuration.
        config:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PaymentIntentConfigResponse'
          description: Details about the payment intent configuration.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: A set of key-value pairs that you can use to store additional information.
          nullable: true
        intendedAmount:
          description: The amount intended to be collected by this setup intent.
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Money'
        merchantInitiatedTransactionType:
          $ref: '#/components/schemas/MerchantInitiatedTransactionType'
        terms:
          type: string
          nullable: true
          description: The terms that customers are required to review before adding a card to the setup intent.
    EventType:
      type: string
      description: The current state of the payment.
      x-enumNames:
        - Created
        - Authorized
        - Captured
        - Reversed
        - Refunded
        - Canceled
        - AuthChallenged
        - Declined
        - ManualAuthReady
        - Error
        - Unknown
      enum:
        - Created
        - Authorized
        - Captured
        - Reversed
        - Refunded
        - Canceled
        - AuthChallenged
        - Declined
        - ManualAuthReady
        - Error
        - Unknown
    PaymentStatusResponse:
      type: object
      additionalProperties: false
      title: PaymentStatusResponse
      description: ''
      properties:
        transactionId:
          type: string
          description: The unique identifier for the transaction.
          nullable: true
        transactionDateTime:
          type: string
          description: The date and time of the payment in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format.
          nullable: true
        eventType:
          $ref: '#/components/schemas/EventType'
        authCode:
          type: string
          description: The acquirer's authorization code. This code is returned on a successful transaction.
          nullable: true
        cardNumber:
          type: string
          description: The card number.
          nullable: true
        expiryDate:
          type: string
          description: The expiry month and year in MM/YY format.
          nullable: true
        cardType:
          type: string
          description: The card scheme.
          nullable: true
          example: VISA
        cardholderName:
          type: string
          description: The name of the cardholder.
          nullable: true
    SetupIntentResponse:
      allOf:
        - $ref: '#/components/schemas/SetupIntentPublicResponse'
        - type: object
          additionalProperties: false
          properties:
            setupEvents:
              type: array
              nullable: true
              description: Updates related to the setup intent's status.
              items:
                $ref: '#/components/schemas/PaymentStatusResponse'
    WebhookViewModel:
      type: object
      additionalProperties: false
      properties:
        model:
          type: string
          description: The Webhook type.
        events:
          type: array
          description: The list of events.
          items:
            type: string
    SubscriptionSecret:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          description: The unique identifier for the secret.
        value:
          type: string
          description: The secret value.
        createdAt:
          type: string
          format: date-time
          description: The timestamp of the created date, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format.
        isActive:
          type: boolean
          description: The status of the secret. It can be activated or deactivated.
    Subscription:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          description: The unique identifier for the subscription.
        accountId:
          type: string
          nullable: true
          description: The unique identifier for the account.
        events:
          type: array
          description: The list of events.
          items:
            type: string
        url:
          type: string
          description: The URL of the Webhook endpoint.
          format: uri
          minLength: 1
          pattern: ^https://*.+
        description:
          type: string
          nullable: true
          description: The subscription description.
        secrets:
          type: array
          description: The list of secrets associated with the subscription. Used to generate signatures.
          items:
            $ref: '#/components/schemas/SubscriptionSecret'
        createdAt:
          type: string
          format: date-time
          description: The timestamp of the create date, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format.
        updatedAt:
          type: string
          format: date-time
          description: The timestamp of the update date, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format.
    SubscriptionRequest:
      type: object
      example:
        events:
          - payment_intent.created
          - payment.successful
          - order.created
        url: https://example.com/incoming-events
      additionalProperties: false
      required:
        - events
        - url
      properties:
        events:
          type: array
          description: The list of events.
          items:
            type: string
        url:
          type: string
          format: uri
          minLength: 1
          pattern: ^https://*.+
          description: The URL of the Webhook endpoint.
        description:
          nullable: true
          type: string
          description: The subscription description.
    SecretsResponse:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          description: The unique identifier for the subscription.
        secrets:
          type: array
          description: The list of secrets associated with the subscription. Used to generate signatures.
          items:
            $ref: '#/components/schemas/SubscriptionSecret'
    SubscriptionUpdateRequest:
      type: object
      example:
        events:
          - payment_intent.created
          - order.created
      additionalProperties: false
      properties:
        events:
          type: array
          description: The list of events.
          items:
            type: string
          nullable: true
        url:
          type: string
          description: The URL of the Webhook endpoint.
          format: uri
          pattern: ^https://*.+
          nullable: true
        description:
          type: string
          nullable: true
          description: The subscription description.
    CreateCustomerRequest:
      type: object
      additionalProperties: false
      example:
        name: Alex
        emailAddress: alex@dojo.com
      properties:
        name:
          type: string
          nullable: true
          maxLength: 100
          description: The customer's name.
        shippingAddress:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/Address'
          description: The recipient's shipping address.
        billingAddress:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/Address'
          description: The recipient's invoicing address.
        emailAddress:
          type: string
          maxLength: 254
          description: The customer's email address.
          nullable: true
        phoneNumber:
          maxLength: 50
          minLength: 5
          type: string
          description: The customer's phone number.
          nullable: true
        vatNumber:
          type: string
          nullable: true
          maxLength: 50
          description: The customer's VAT number.
    CustomerFull:
      type: object
      additionalProperties: false
      example:
        id: cs_qNkU6yob0vOMxUlb2oynUw
        name: Alex
        emailAddress: alex@dojo.com
        documentVersion: 0
        createdAt: '2023-08-24T14:15:22Z'
      properties:
        id:
          type: string
          nullable: true
          description: The unique identifier of the customer.
        name:
          type: string
          nullable: true
          description: The customer's name.
        shippingAddress:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/Address'
          description: The recipient's shipping address.
        billingAddress:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/Address'
          description: The recipient's invoicing address.
        emailAddress:
          type: string
          description: The customer's email address.
          nullable: true
        phoneNumber:
          type: string
          description: The customer's phone number.
          nullable: true
        vatNumber:
          type: string
          nullable: true
          description: The customer's VAT number.
        createdAt:
          type: string
          format: date-time
          nullable: true
          description: The timestamp of the create date, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format.
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: The timestamp of the update date, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format.
        documentVersion:
          type: integer
          format: int32
          description: The version of the customer's data updated with every change.
    UpdateCustomerRequest:
      type: object
      additionalProperties: false
      example:
        phoneNumber: '078976534161'
      properties:
        name:
          type: string
          nullable: true
          maxLength: 100
          description: The customer's name.
        billingAddress:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/Address'
          description: The recipient's invoicing address.
        shippingAddress:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/Address'
          description: The recipient's shipping address.
        emailAddress:
          type: string
          nullable: true
          maxLength: 254
          description: The customer's email address.
        phoneNumber:
          type: string
          nullable: true
          maxLength: 50
          minLength: 5
          description: The customer's phone number.
        vatNumber:
          type: string
          nullable: true
          maxLength: 50
          description: The customer's VAT number.
    CustomerSecret:
      type: object
      title: CustomerSecret
      additionalProperties: false
      properties:
        secret:
          type: string
          description: The unique identifier for the secret.
          nullable: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of the create date, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format.
        expireAt:
          type: string
          format: date-time
          description: The timestamp at which the customer secret expires, in [ISO 8601]((https://en.wikipedia.org/wiki/ISO_8601) UTC format.
      example:
        secret: cs_qNkU6yob0vOMxUlb2oynUw
        createdAt: '2022-10-31T10:15:00Z'
        expireAt: '2022-10-31T10:30:22Z'
    CardDetails:
      type: object
      properties:
        pan:
          description: The masked pan number of the customer's saved card.
          type: string
        expiryDate:
          description: The expiry date of the card saved by the customer.
          type: string
        scheme:
          $ref: '#/components/schemas/CardScheme'
      additionalProperties: false
    CustomerPaymentMethod:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          description: The unique identifier of the customer's saved payment method.
          nullable: true
        cardDetails:
          nullable: true
          description: The card details saved by the customer.
          oneOf:
            - $ref: '#/components/schemas/CardDetails'
    CustomerPaymentMethods:
      type: object
      additionalProperties: false
      properties:
        customerId:
          type: string
          description: The unique identifier of the customer.
          nullable: true
        merchantId:
          type: string
          description: The unique identifier of the merchant.
          nullable: true
        savedPaymentMethods:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CustomerPaymentMethod'
          description: List of the customer saved payment methods.
        supportedPaymentMethods:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/SupportedPaymentMethods'
          description: Supported payment methods.
      example:
        customerId: cust_qNkU6yob0vOMxUlb2oy123
        merchantId: '123456789'
        savedPaymentMethods:
          - id: pm_12345
            cardDetails:
              pan: 52000000****0056
              expiryDate: '2024-12-31'
              scheme: MASTERCARD
        supportedPaymentMethods:
          cardSchemes:
            - VISA
            - MASTERCARD
            - MAESTRO
            - DISCOVER
            - DCI
            - AMEX
          wallets:
            - APPLE_PAY
            - GOOGLE_PAY
    SearchCustomerRequest:
      type: object
      additionalProperties: false
      description: 'A cursor for use in pagination. '
      properties:
        limit:
          type: integer
          format: int32
          minimum: 1
          maximum: 100
          example: 20
          default: 50
          description: The maximum number of results to be returned in a single page.
        before:
          type: string
          maxLength: 200
          description: A cursor for use in pagination for the previous page. `before` and `after` are mutually exclusive. Only one of these may be used.
          nullable: true
        after:
          type: string
          maxLength: 200
          description: A cursor for use in pagination for the next page. `before` and `after` are mutually exclusive. Only one of these may be used.
          nullable: true
    PagedResultOfCustomer:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CustomerFull'
          description: An array of customers.
        before:
          type: string
          nullable: true
          example: IjIwMjItMDYtMjJUMTQ6MTc6MjYuMDkyWiI=
          description: A cursor for use in pagination for the previous page.
        after:
          type: string
          nullable: true
          example: IjIwMjItMDYtMjBUMTM6MzI6MjIuNDM1WiI=
          description: A cursor for use in pagination for the next page.
    TerminalStatus:
      title: TerminalStatus
      description: A machine-readable value describing the state of the terminal.
      enum:
        - Available
        - Offline
        - InUse
      type: string
    Terminal:
      title: Terminal
      description: The terminal object.
      required:
        - id
        - tid
        - status
        - updatedAt
      type: object
      properties:
        id:
          description: The unique identifier for the terminal.
          type: string
          example: tm_sandbox_amxm22C23
        tid:
          description: An 8-digit identifier printed on receipts.
          type: string
          example: '123456789'
        status:
          $ref: '#/components/schemas/TerminalStatus'
          description:
            $ref: ../../../prose/parameters/terminalStatus.md
        updatedAt:
          format: date-time
          description: The timestamp of the update date, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format.
          type: string
    TerminalSessionUnlinkedRefundDetails:
      description: An unlinked refund has not yet been associated with a payment intent.
      required:
        - amount
      type: object
      properties:
        amount:
          allOf:
            - $ref: '#/components/schemas/Money'
          description: The value of the unlinked refund, in minor units.
    TerminalSessionMatchedRefundDetails:
      description: A matched refund is associated with the payment intent of the initial transaction.
      required:
        - paymentIntentId
      type: object
      properties:
        paymentIntentId:
          type: string
          description: |
            The unique identifier for the payment intent.
        amount:
          allOf:
            - $ref: '#/components/schemas/Money'
          description: The value of the linked refund, in minor units.
    TerminalSessionSaleDetails:
      description: Use this field when creating a terminal session request to name a payment intent by its ID to associate with the session.
      required:
        - paymentIntentId
      type: object
      properties:
        paymentIntentId:
          description: |
            The unique identifier for the payment intent.
          type: string
          example: pi_sandbox_RBMHTJ4fIkmSppDILZVCGw
    TerminalSessionType:
      description: Decide which type of transaction a terminal session is going to be associated with.
      enum:
        - Sale
        - MatchedRefund
        - UnlinkedRefund
      type: string
    TerminalSessionDetails:
      description: Details about the terminal session, including which type of transaction it is associated with.
      required:
        - sessionType
      type: object
      anyOf:
        - required:
            - sale
        - required:
            - unlinkedRefund
        - required:
            - matchedRefund
      properties:
        unlinkedRefund:
          $ref: '#/components/schemas/TerminalSessionUnlinkedRefundDetails'
          description:
            $ref: ../../../prose/parameters/unlinkedRefund.md
        matchedRefund:
          $ref: '#/components/schemas/TerminalSessionMatchedRefundDetails'
          description:
            $ref: ../../../prose/parameters/matchedRefund.md
        sale:
          $ref: '#/components/schemas/TerminalSessionSaleDetails'
          description:
            $ref: ../../../prose/parameters/terminalSessionSaleDetails.md
        sessionType:
          $ref: '#/components/schemas/TerminalSessionType'
          description:
            $ref: ../../../prose/parameters/terminalSessionType.md
    CreateTerminalSessionRequest:
      type: object
      description: Create a terminal session, and decide what sort of transaction it is going to be associated with. Note that only one of the refund types can be specified, and this selection must be the same as the `sessionType`.
      additionalProperties: false
      title: CreateTerminalSessionRequest
      required:
        - terminalId
        - details
      properties:
        terminalId:
          description: The unique identifier for the terminal.
          type: string
          example: tm_sandbox_amxm22C23
        details:
          $ref: '#/components/schemas/TerminalSessionDetails'
          description:
            $ref: ../../../prose/parameters/TerminalSessionDetails.md
    TerminalSessionStatus:
      description: ''
      enum:
        - InitiateRequested
        - Initiated
        - Authorized
        - Captured
        - CancelRequested
        - Canceled
        - SignatureVerificationAccepted
        - SignatureVerificationRejected
        - SignatureVerificationRequired
        - Expired
        - Rejected
      type: string
    TerminalSessionNotificationType:
      description: ''
      enum:
        - Approved
        - Declined
        - InsertCard
        - EnterPin
        - PleaseWait
        - PresentCard
        - PresentOnlyOneCard
        - RemoveCard
        - CardUnsupported
      type: string
    TerminalSessionNotificationEvent:
      description: This event is a timestamped record of when a notification was issued.
      required:
        - notificationType
        - createdAt
      type: object
      properties:
        notificationType:
          $ref: '#/components/schemas/TerminalSessionNotificationType'
          description:
            $ref: ../../../prose/parameters/notificationType.md
        createdAt:
          format: date-time
          description: This is when the terminal session was created, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format.
          type: string
    TerminalSessionStatusEvent:
      description: The current progress of the terminal session, including whether it is in-progress or finished.
      required:
        - status
        - createdAt
        - debugMessage
      type: object
      properties:
        status:
          $ref: '#/components/schemas/TerminalSessionStatus'
          description:
            $ref: ../../../prose/parameters/terminalSessionStatus.md
        createdAt:
          format: date-time
          description: The timestamp of the create date, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format.
          type: string
        debugMessage:
          description: |
            The message to troubleshoot the terminal session by revealing the internal state of the terminal.
          type: string
    TerminalSessionReceiptLineFormat:
      description: These are configurable formatting options for the receipt lines.
      enum:
        - DoubleHeight
        - DoubleWidth
        - Bold
      type: string
    TerminalSessionReceiptLineType:
      description: These are the line types that will form the physical receipt.
      enum:
        - Text
        - LogoImage
        - NewLine
        - SingleLineSeperator
        - DoubleLineSeperator
      type: string
    TerminalSessionReceiptLine:
      description: The value and configuration of the terminal session receipt line.
      required:
        - formats
        - value
        - lineType
      type: object
      properties:
        formats:
          description: Basic line configuration.
          type: array
          items:
            $ref: '#/components/schemas/TerminalSessionReceiptLineFormat'
        value:
          description: The textual content of the receipt line.
          type: string
        lineType:
          $ref: '#/components/schemas/TerminalSessionReceiptLineType'
          description:
            $ref: ../../../prose/parameters/lineType.md
    TerminalSessionReceipt:
      description: ' '
      required:
        - lines
      type: object
      properties:
        lines:
          description: The line items purchased by the customer.
          type: array
          items:
            $ref: '#/components/schemas/TerminalSessionReceiptLine'
    TerminalSession:
      description: This is the terminal session object, containing detailed information about the history of the terminal session, and its current status.
      required:
        - createdAt
        - updatedAt
        - id
        - status
        - notificationEvents
        - expireAt
        - statusEvents
        - terminalId
      type: object
      properties:
        terminalId:
          description: The unique identifier for the terminal.
          type: string
        createdAt:
          format: date-time
          description: This is when the terminal session was created, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format.
          type: string
        updatedAt:
          type: string
          format: date-time
          description: The timestamp of the update date, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format.
        id:
          description: The unique identifier of the terminal session.
          type: string
          example: ts_sandbox_RBMHTJ4fIkmSppDILZVCGw
        status:
          description: The current status of the terminal session. A finalized, successful session will be `Captured`.
          oneOf:
            - $ref: '#/components/schemas/TerminalSessionStatus'
        expireAt:
          format: date-time
          description: The timestamp and date of when a payment intent will be voided, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) UTC format. This occurs when a payment intent is created and not yet authorized. If `null`, the payment intent is voided after 30 days.
          type: string
        notificationEvents:
          description: When a notification is issued, a notification event is created to record when it occurred.
          type: array
          items:
            $ref: '#/components/schemas/TerminalSessionNotificationEvent'
        statusEvents:
          description: Status events include the capture, cancellation, and refund of payments.
          type: array
          items:
            $ref: '#/components/schemas/TerminalSessionStatusEvent'
        customerReceipt:
          allOf:
            - $ref: '#/components/schemas/TerminalSessionReceipt'
          description: Decide whether this receipt will be the type issued to the customer.
        merchantReceipt:
          allOf:
            - $ref: '#/components/schemas/TerminalSessionReceipt'
          description: Decide whether this receipt will be the type retained by the merchant.
        details:
          $ref: '#/components/schemas/TerminalSessionDetails'
          description:
            $ref: ../../../prose/parameters/TerminalSessionDetails.md
    SignatureVerificationRequest:
      title: SignatureVerificationRequest
      description: Notifies the terminal of the outcome of signature verification.
      required:
        - accepted
      type: object
      properties:
        accepted:
          description: True/false. Failed signature verification requests will be false.
          type: boolean
  parameters:
    SoftwareHouseId:
      name: software-house-id
      description: Software house id header
      schema:
        type: string
      example: softwareHouse1
      in: header
      required: true
    ResellerId:
      name: reseller-id
      description: Reseller id header
      schema:
        type: string
      example: reseller1
      in: header
      required: true
